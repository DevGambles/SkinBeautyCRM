{"version":3,"sources":["redux/actions/customer/index.js","views/pages/customers/DataListSidebar.js","views/pages/customers/DataListConfig.js","views/pages/customers/Customers.js"],"names":["generateUrl","sessionTime","dispatch","Axios","post","session_time","then","response","console","log","data","status","type","url","toast","error","msg","catch","err","isOpened","success","timeLeft","getData","params","get","rdata","page","perPage","totalPages","Math","ceil","length","fdata","newparams","undefined","calculatedPage","calculatedPerPage","slice","bodyarea","filterData","value","deleteData","obj","updateData","getState","addData","DataListSidebar","state","_id","name","email","phone","city","price","fsession","lsession","referredby","addNew","handleSubmit","props","Object","keys","dataParams","handleSidebar","prevProps","prevState","this","setState","show","className","classnames","size","onClick","options","wheelPropagation","FormGroup","Label","for","Input","placeholder","onChange","e","target","id","Button","color","outline","Component","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","currentData","row","deleteRow","CustomHeader","UncontrolledDropdown","DropdownToggle","index","total","DropdownMenu","tag","right","DropdownItem","handleRowsPerPage","handleFilter","DataListConfig","currentPage","columns","selector","sortable","cell","title","href","config","host","pdf","parsedFilter","handleCurrentData","handleDelete","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","thumbView","history","push","boolean","urlPrefix","parseInt","handlePagination","_target","pagination","paginationServer","paginationComponent","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","containerClassName","activeClassName","forcePage","onPageChange","noHeader","subHeader","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","sortIcon","dataList","filteredData","connect","customer","Customers","Fragment","Row","Col","sm","queryString","parse","location","search","React"],"mappings":"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","file":"static/js/17.3ded8238.chunk.js","sourcesContent":["import {Axios} from \"../root\"\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const generateUrl = (sessionTime) => {\r\n  return dispatch => {\r\n    Axios.post(\"customers/generate_url\", {\r\n    session_time: sessionTime\r\n  })\r\n  .then(response => {\r\n    console.log(\"GenerateUrl Response: \", response);\r\n    if(response.data.status){\r\n      dispatch({\r\n        type: \"GENERATE_URL\",\r\n        url: response.data.url\r\n      })\r\n\r\n    }\r\n    else{\r\n        toast.error(response.data.msg);\r\n    }\r\n  })\r\n  .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const isOpened = (url) => {\r\n  return dispatch => {\r\n    Axios.post(\"customers/isopened\", {\r\n    url: url\r\n  })\r\n  .then(response => {\r\n    if(response.data.status){\r\n      toast.success('This url is already opened.');\r\n    }\r\n    else{\r\n        toast.error(response.data.msg);\r\n    }\r\n  })\r\n  .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const timeLeft = (url) => {\r\n  return dispatch => {\r\n    Axios.post(\"customers/timeleft\", {\r\n    url: url\r\n  })\r\n  .then(response => {\r\n    if(response.data.status){\r\n\r\n      toast.success(response.data.msg);\r\n    }\r\n    else{\r\n        toast.error(response.data.msg);\r\n    }\r\n  })\r\n  .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getData = params => {\r\n    return async dispatch => {\r\n      await Axios.get(\"customers/customers\", params).then(response => {\r\n        if(!response.data.status){\r\n          toast.error('Internal Server Error!');\r\n        }\r\n        else{\r\n          let rdata = response.data;\r\n          let { page, perPage } = params;\r\n          let totalPages = Math.ceil(rdata.data.length / perPage);\r\n          let fdata = [];\r\n          let newparams = {};\r\n          if (page !== undefined && perPage !== undefined) {\r\n            let calculatedPage = (page - 1) * perPage;\r\n            let calculatedPerPage = page * perPage;\r\n              if(calculatedPage > rdata.data.length){\r\n              totalPages = Math.ceil(rdata.data.length / perPage);\r\n              fdata = rdata.data.slice(0, perPage);\r\n              newparams['page'] = 0;\r\n              newparams['perPage'] = perPage;\r\n            }else{\r\n              fdata = rdata.data.slice(calculatedPage, calculatedPerPage);\r\n              newparams = params;\r\n            }\r\n          }else {\r\n            totalPages = Math.ceil(rdata.data.length / 4);\r\n            fdata = rdata.data.slice(0, 4);\r\n            newparams = params;\r\n          }\r\n          if(fdata.length === 0){\r\n            newparams['page'] = 0;\r\n            newparams['perPage'] = 4;\r\n            fdata = rdata.data.slice(0, 4);\r\n          }\r\n          dispatch({ type: \"GET_CUSTOMER_ALL_DATA\", data: rdata.data, bodyarea: rdata.bodyarea })\r\n          dispatch({\r\n            type: \"GET_CUSTOMER_DATA\",\r\n            data: fdata,\r\n            bodyarea: rdata.bodyarea,\r\n            totalPages: totalPages,\r\n            newparams\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const filterData = value => {\r\n    return dispatch => dispatch({ type: \"FILTER_CUSTOMER_DATA\", value })\r\n  }\r\n  \r\n  export const deleteData = obj => {\r\n    return dispatch => {\r\n      Axios\r\n        .post(\"customers/delete\",obj)\r\n        .then(response => {\r\n          if(!response.data.status){\r\n            toast.error(response.data.msg);\r\n          }\r\n          else{\r\n            dispatch(getData(obj))\r\n          }\r\n        })\r\n    }\r\n  }\r\n  \r\n  export const updateData = obj => {\r\n    console.log(obj);\r\n    return (dispatch, getState) => {\r\n      Axios\r\n        .post(\"customers/update\", obj)\r\n        .then(response => {\r\n          if(!response.data.status){\r\n            toast.error(response.data.msg);\r\n          }\r\n          else{\r\n            dispatch(getData(obj))\r\n          }\r\n        })\r\n    }\r\n  }\r\n  \r\n  export const addData = obj => {\r\n    return (dispatch, getState) => {\r\n      Axios\r\n        .post(\"customers/add\", obj)\r\n        .then(response => {\r\n          if(!response.data.status){\r\n            toast.error(response.data.msg);\r\n          }\r\n          else{\r\n            dispatch(getData(obj))\r\n          }\r\n        })\r\n    }\r\n  }","import React, { Component } from \"react\"\r\nimport { Label, Input, FormGroup, Button } from \"reactstrap\"\r\nimport { X } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport classnames from \"classnames\"\r\n\r\nclass DataListSidebar extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    city: \"\",\r\n    price: \"\",\r\n    fsession: \"\",\r\n    lsession: \"\",\r\n    referredby: \"\"\r\n  }\r\n\r\n  addNew = false\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.data !== null && prevProps.data === null) {\r\n      if (this.props.data._id !== prevState._id) {\r\n        this.setState({ _id: this.props.data._id })\r\n      }\r\n      if (this.props.data.name !== prevState.name) {\r\n        this.setState({ name: this.props.data.name })\r\n      }\r\n      if (this.props.data.email !== prevState.email) {\r\n        this.setState({ email: this.props.data.email })\r\n      }\r\n      if (this.props.data.phone !== prevState.phone) {\r\n        this.setState({ phone: this.props.data.phone })\r\n      }\r\n      if (this.props.data.city !== prevState.city) {\r\n        this.setState({ city: this.props.data.city })\r\n      }\r\n      if (this.props.data.fsession !== prevState.fsession) {\r\n        this.setState({ fsession: this.props.data.fsession })\r\n      }\r\n      if (this.props.data.lsession !== prevState.lsession) {\r\n        this.setState({ lsession: this.props.data.lsession })\r\n      }\r\n      if (this.props.data.referredby !== prevState.referredby) {\r\n        this.setState({ referredby: this.props.data.referredby })\r\n      }\r\n      \r\n    }\r\n    if (this.props.data === null && prevProps.data !== null) {\r\n      this.setState({\r\n        _id: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        city: \"\",\r\n        price: \"\",\r\n        fsession: \"\",\r\n        lsession: \"\",\r\n        referredby: \"\"\r\n      })\r\n    }\r\n    if (this.addNew) {\r\n      this.setState({\r\n        _id: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        city: \"\",\r\n        price: \"\",\r\n        fsession: \"\",\r\n        lsession: \"\",\r\n        referredby: \"\"\r\n      })\r\n    }\r\n    this.addNew = false\r\n  }\r\n\r\n  handleSubmit = obj => {\r\n    if (this.props.data !== null) {\r\n      this.props.updateData(obj)\r\n    } else {\r\n      this.addNew = true\r\n      this.props.addData(obj)\r\n    }\r\n    let params = Object.keys(this.props.dataParams).length\r\n      ? this.props.dataParams\r\n      : { page: 1, perPage: 10 }\r\n    this.props.handleSidebar(false, true)\r\n    this.props.getData(params)\r\n  }\r\n\r\n  render() {\r\n    let { show, handleSidebar, data } = this.props\r\n    let { name, email, phone, city, fsession, lsession, referredby } = this.state\r\n    return (\r\n      <div\r\n        className={classnames(\"data-list-sidebar\", {\r\n          show: show\r\n        })}>\r\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\r\n          <h4>{data !== null ? \"UPDATE DATA\" : \"ADD NEW DATA\"}</h4>\r\n          <X size={20} onClick={() => handleSidebar(false, true)} />\r\n        </div>\r\n        <PerfectScrollbar\r\n          className=\"data-list-fields px-2 mt-3\"\r\n          options={{ wheelPropagation: false }}>\r\n          <FormGroup>\r\n            <Label for=\"data-name\">Name</Label>\r\n            <Input\r\n              type=\"text\"\r\n              value={name}\r\n              placeholder=\"Apple IphoneX\"\r\n              onChange={e => this.setState({ name: e.target.value })}\r\n              id=\"data-name\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-email\">Email</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-email\"\r\n              value={email}\r\n              onChange={e => this.setState({ email: e.target.value })} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-phone\">Phone</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-phone\"\r\n              value={phone}\r\n              onChange={e => this.setState({ phone: e.target.value })} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-city\">City</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-city\"\r\n              value={city}\r\n              onChange={e => this.setState({ city: e.target.value })} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-fsession\">First Session</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-fsession\"\r\n              value={fsession}\r\n              onChange={e => this.setState({ fsession: e.target.value })} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-lsession\">Last Session</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-lsession\"\r\n              value={lsession}\r\n              onChange={e => this.setState({ lsession: e.target.value })} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-referredby\">Referred By</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-referredby\"\r\n              value={referredby}\r\n              onChange={e => this.setState({ referredby: e.target.value })} />\r\n          </FormGroup>\r\n        </PerfectScrollbar>\r\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\r\n          <Button color=\"primary\" onClick={() => this.handleSubmit(this.state)}>\r\n            {data !== null ? \"Update\" : \"Submit\"}\r\n          </Button>\r\n          <Button\r\n            className=\"ml-1\"\r\n            color=\"danger\"\r\n            outline\r\n            onClick={() => handleSidebar(false, true)}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default DataListSidebar\r\n","import React, { Component } from \"react\"\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  Input\r\n} from \"reactstrap\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport classnames from \"classnames\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { history } from \"../../../history\"\r\nimport {\r\n  Edit,\r\n  Trash,\r\n  ChevronDown,\r\n  ChevronLeft,\r\n  ChevronRight\r\n} from \"react-feather\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getData,\r\n  deleteData,\r\n  updateData,\r\n  addData,\r\n  filterData\r\n} from \"../../../redux/actions/customer\"\r\nimport Sidebar from \"./DataListSidebar\"\r\n\r\nimport \"../../../assets/scss/plugins/extensions/react-paginate.scss\"\r\nimport \"../../../assets/scss/pages/data-list.scss\"\r\nimport config from \"../../../configs/config\"\r\n\r\nconst selectedStyle = {\r\n  rows: {\r\n    selectedHighlighStyle: {\r\n      backgroundColor: \"rgba(115,103,240,.05)\",\r\n      color: \"#7367F0 !important\",\r\n      boxShadow: \"0 0 1px 0 #7367F0 !important\",\r\n      \"&:hover\": {\r\n        transform: \"translateY(0px) !important\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst ActionsComponent = props => {\r\n  return (\r\n    <div className=\"data-list-action\">\r\n      <Edit\r\n        className=\"cursor-pointer mr-1\"\r\n        size={20}\r\n        onClick={() => {\r\n          return props.currentData(props.row)\r\n        }}\r\n      />\r\n      <Trash\r\n        className=\"cursor-pointer\"\r\n        size={20}\r\n        onClick={() => {\r\n          props.deleteRow(props.row)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CustomHeader = props => {\r\n  return (\r\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\r\n      <div className=\"actions-left d-flex flex-wrap\">\r\n        {/* <UncontrolledDropdown className=\"data-list-dropdown mr-1\">\r\n          <DropdownToggle className=\"p-1\" color=\"primary\">\r\n            <span className=\"align-middle mr-1\">Actions</span>\r\n            <ChevronDown size={15} />\r\n          </DropdownToggle>\r\n          <DropdownMenu tag=\"div\" right>\r\n            <DropdownItem tag=\"a\">Delete</DropdownItem>\r\n            <DropdownItem tag=\"a\">Archive</DropdownItem>\r\n            <DropdownItem tag=\"a\">Print</DropdownItem>\r\n            <DropdownItem tag=\"a\">Export</DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown> */}\r\n        {/* <Button\r\n          className=\"add-new-btn\"\r\n          color=\"primary\"\r\n          onClick={() => props.handleSidebar(true, true)}\r\n          outline>\r\n          <Plus size={15} />\r\n          <span className=\"align-middle\">Add New</span>\r\n        </Button> */}\r\n      </div>\r\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\r\n        <UncontrolledDropdown className=\"data-list-rows-dropdown mr-1 d-md-block d-none\">\r\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\r\n            <span className=\"align-middle mx-50\">\r\n              {`${props.index[0] || 0} - ${props.index[1] || 0} of ${props.total}`}\r\n            </span>\r\n            <ChevronDown size={15} />\r\n          </DropdownToggle>\r\n          <DropdownMenu tag=\"div\" right>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\r\n              4\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\r\n              10\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\r\n              15\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\r\n              20\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n        <div className=\"filter-section\">\r\n          <Input type=\"text\" onChange={e => props.handleFilter(e)} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass DataListConfig extends Component {\r\n\r\n  state = {\r\n    data: [],\r\n    totalPages: 0,\r\n    currentPage: 0,\r\n    columns: [\r\n      {\r\n        name: \"Name\",\r\n        selector: \"name\",\r\n        sortable: true,\r\n        // minWidth: \"300px\",\r\n        cell: row => (\r\n          <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\r\n            {row.name}\r\n          </p>\r\n        )\r\n      },\r\n      {\r\n        name: \"Email\",\r\n        selector: \"email\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"Phone\",\r\n        selector: \"phone\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"City\",\r\n        selector: \"city\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"First Session\",\r\n        selector: \"fsession\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"Last Session\",\r\n        selector: \"lsession\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"Referred By\",\r\n        selector: \"referredby\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"Consent Form\",\r\n        selector: \"pdf\",\r\n        sortable: true,\r\n        cell: row => (\r\n              <a\r\n                className=\"m-0\"\r\n                href={config.host+'consentforms/'+row.pdf}\r\n                target=\"_blank\"\r\n              >View</a>\r\n        )\r\n      },\r\n      {\r\n        name: \"Actions\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <ActionsComponent\r\n            row={row}\r\n            getData={this.props.getData}\r\n            parsedFilter={this.props.parsedFilter}\r\n            currentData={this.handleCurrentData}\r\n            deleteRow={this.handleDelete}\r\n          />\r\n        )\r\n      }\r\n    ],\r\n    allData: [],\r\n    value: \"\",\r\n    rowsPerPage: 4,\r\n    sidebar: false,\r\n    currentData: null,\r\n    selected: [],\r\n    totalRecords: 0,\r\n    sortIndex: [],\r\n    addNew: \"\"\r\n  }\r\n\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.dataList.data.length !== state.data.length || state.currentPage !== props.parsedFilter.page) {\r\n      return {\r\n        data: props.dataList.data,\r\n        allData: props.dataList.filteredData,\r\n        totalPages: props.dataList.totalPages,\r\n        currentPage: parseInt(props.parsedFilter.page) - 1,\r\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\r\n        totalRecords: props.dataList.totalRecords,\r\n        sortIndex: props.dataList.sortIndex\r\n      }\r\n    }\r\n\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n\r\n\r\n  thumbView = this.props.thumbView\r\n\r\n  componentDidMount() {\r\n    this.props.getData(this.props.parsedFilter)\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.thumbView) {\r\n      this.thumbView = false\r\n      let columns = [\r\n        {\r\n          name: \"Name\",\r\n          selector: \"name\",\r\n          sortable: true,\r\n          cell: row => (\r\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\r\n              {row.name}\r\n            </p>\r\n          )\r\n        },\r\n        {\r\n          name: \"Email\",\r\n          selector: \"email\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Phone\",\r\n          selector: \"phone\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"City\",\r\n          selector: \"city\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"First Session\",\r\n          selector: \"fsession\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Last Session\",\r\n          selector: \"lsession\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Referred By\",\r\n          selector: \"referredby\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Consent Form\",\r\n          selector: \"pdf\",\r\n          sortable: true,\r\n          cell: row => (\r\n                <a\r\n                  className=\"m-0\"\r\n                  href={config.host+'consentforms/'+row.pdf}\r\n                  _target=\"blank\"\r\n                >View</a>\r\n          )\r\n        },\r\n        {\r\n          name: \"Actions\",\r\n          sortable: true,\r\n          cell: row => (\r\n            <ActionsComponent\r\n              row={row}\r\n              getData={this.props.getData}\r\n              parsedFilter={this.props.parsedFilter}\r\n              currentData={this.handleCurrentData}\r\n              deleteRow={this.handleDelete}\r\n            />\r\n          )\r\n        }\r\n      ]\r\n      this.setState({ columns })\r\n    }\r\n  }\r\n\r\n  handleFilter = e => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.filterData(e.target.value)\r\n  }\r\n\r\n  handleRowsPerPage = value => {\r\n    let { parsedFilter, getData } = this.props\r\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\r\n    history.push(`?page=${page}&perPage=${value}`)\r\n    this.setState({ rowsPerPage: value })\r\n    getData({ page: parsedFilter.page, perPage: value })\r\n  }\r\n\r\n  handleSidebar = (boolean, addNew = false) => {\r\n    this.setState({ sidebar: boolean })\r\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\r\n  }\r\n\r\n  handleDelete = row => {\r\n    this.props.deleteData(row)\r\n    this.props.getData(this.props.parsedFilter)\r\n    if (this.state.data.length - 1 === 0) {\r\n      let urlPrefix = this.props.thumbView\r\n        ? \"\"\r\n        : \"\"\r\n      history.push(\r\n        `${urlPrefix}?page=${parseInt(\r\n          this.props.parsedFilter.page - 1\r\n        )}&perPage=${this.props.parsedFilter.perPage}`\r\n      )\r\n      this.props.getData({\r\n        page: this.props.parsedFilter.page - 1,\r\n        perPage: this.props.parsedFilter.perPage\r\n      })\r\n    }\r\n  }\r\n\r\n  handleCurrentData = obj => {\r\n    this.setState({ currentData: obj })\r\n    this.handleSidebar(true)\r\n  }\r\n\r\n  handlePagination = page => {\r\n    let { parsedFilter, getData } = this.props\r\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\r\n    let urlPrefix = this.props.thumbView\r\n      ? \"\"\r\n      : \"\"\r\n    history.push(\r\n      `${urlPrefix}?page=${page.selected + 1}&perPage=${perPage}`\r\n    )\r\n    getData({ page: page.selected + 1, perPage: perPage })\r\n    this.setState({ currentPage: page.selected })\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      columns,\r\n      data,\r\n      allData,\r\n      totalPages,\r\n      value,\r\n      rowsPerPage,\r\n      currentData,\r\n      sidebar,\r\n      totalRecords,\r\n      sortIndex\r\n    } = this.state\r\n    return (\r\n      <div\r\n        className={`data-list ${\r\n          this.props.thumbView ? \"thumb-view\" : \"list-view\"\r\n        }`}>\r\n        <DataTable\r\n          columns={columns}\r\n          data={value.length ? allData : data}\r\n          pagination\r\n          paginationServer\r\n          paginationComponent={() => (\r\n            <ReactPaginate\r\n              previousLabel={<ChevronLeft size={15} />}\r\n              nextLabel={<ChevronRight size={15} />}\r\n              breakLabel=\"...\"\r\n              breakClassName=\"break-me\"\r\n              pageCount={totalPages}\r\n              containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\r\n              activeClassName=\"active\"\r\n              forcePage={\r\n                this.props.parsedFilter.page\r\n                  ? parseInt(this.props.parsedFilter.page - 1)\r\n                  : 0\r\n              }\r\n              onPageChange={page => this.handlePagination(page)}\r\n            />\r\n          )}\r\n          noHeader\r\n          subHeader\r\n          responsive\r\n          pointerOnHover\r\n          selectableRowsHighlight\r\n          onSelectedRowsChange={data =>\r\n            this.setState({ selected: data.selectedRows })\r\n          }\r\n          customStyles={selectedStyle}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              handleSidebar={this.handleSidebar}\r\n              handleFilter={this.handleFilter}\r\n              handleRowsPerPage={this.handleRowsPerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              total={totalRecords}\r\n              index={sortIndex}\r\n            />\r\n          }\r\n          sortIcon={<ChevronDown />}\r\n        />\r\n        <Sidebar\r\n          show={sidebar}\r\n          data={currentData}\r\n          updateData={this.props.updateData}\r\n          addData={this.props.addData}\r\n          handleSidebar={this.handleSidebar}\r\n          thumbView={this.props.thumbView}\r\n          getData={this.props.getData}\r\n          dataParams={this.props.parsedFilter}\r\n          addNew={this.state.addNew}\r\n        />\r\n        <div\r\n          className={classnames(\"data-list-overlay\", {\r\n            show: sidebar\r\n          })}\r\n          onClick={() => this.handleSidebar(false, true)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state.customer);\r\n  return {\r\n    dataList: state.customer\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getData,\r\n  deleteData,\r\n  updateData,\r\n  addData,\r\n  filterData\r\n})(DataListConfig)\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\r\nimport ListViewConfig from \"./DataListConfig\"\r\nimport queryString from \"query-string\"\r\n\r\nclass Customers extends React.Component{\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        {/* <Breadcrumbs\r\n          breadCrumbTitle=\"List View\"\r\n          breadCrumbParent=\"Data List\"\r\n          breadCrumbActive=\"List View\"\r\n        /> */}\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <ListViewConfig parsedFilter={queryString.parse(this.props.location.search)}/>\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Customers"],"sourceRoot":""}