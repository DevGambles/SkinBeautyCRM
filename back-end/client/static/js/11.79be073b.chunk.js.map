{"version":3,"sources":["redux/actions/customer/index.js","redux/actions/sessions/index.js","../node_modules/multiselect-react-dropdown/dist/index.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx","views/pages/sessions/DataListSidebar.js","views/pages/sessions/DataListConfig.js","views/pages/sessions/index.js"],"names":["generateUrl","sessionTime","dispatch","Axios","post","session_time","then","response","console","log","data","status","type","url","toast","error","msg","catch","err","isOpened","success","timeLeft","getData","params","get","rdata","page","perPage","totalPages","Math","ceil","length","fdata","newparams","undefined","calculatedPage","calculatedPerPage","slice","bodyarea","filterData","value","deleteData","obj","updateData","getState","addData","customer_id","getCustomers","module","exports","require","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","close","cancel","OutsideAlerter","props","clickEvent","wrapperRef","useRef","outsideClick","useEffect","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","React","children","Multiselect","c","_this","state","inputValue","options","filteredOptions","unfilteredOptions","selectedValues","Object","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","searchWrapper","createRef","searchBox","onChange","bind","onKeyPress","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","onCloseOptionList","isVisible","initialSetValue","this","groupBy","singleSelect","groupByOptions","_proto","Promise","resolve","_this2","setState","componentDidMount","componentDidUpdate","prevProps","prevSelectedvalues","JSON","stringify","focus","componentWillUnmount","clearTimeout","skipCheck","isObject","displayValue","l","optionList","filter","findIndex","v","item","indexOf","reduce","r","a","key","push","create","onSearch","onKeyPressFn","_this3","matchValues","i","search","caseSensitiveSearch","toLowerCase","toString","e","keyCode","disablePreSelectedValues","previousState","index","onRemove","splice","_this4","closeOnSelect","selectionLimit","onSelect","onSingleSelect","_this5","renderOptionList","emptyRecordMsg","loadingMessage","o","loading","className","optionContainer","notFound","keys","map","Fragment","groupHeading","option","isSelected","_this6","onClick","readOnly","checked","optionValueDecorator","_this7","customCloseIcon","_this8","chips","selectedValueDecorator","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","_this9","placeholder","id","name","hidePlaceholder","disable","showArrow","customArrow","multiselectContainer","hideSelectedList","onKeyDown","inputField","autoComplete","disabled","onMouseDown","preventDefault","render","Component","defaultProps","skinTypes","label","getToday","date","Date","year","getFullYear","month","getMonth","dt","getDate","DataListSidebar","_id","area","skintype","kj","cost","comments","addNew","selectedList","selectedItem","arrOfVals","forEach","removedItem","handleSubmit","dataParams","handleSidebar","prevState","show","classnames","size","Button","color","outline","wheelPropagation","FormGroup","Label","for","required","selectedValue","classNamePrefix","defaultValue","Input","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","currentData","row","CustomHeader","UncontrolledDropdown","DropdownToggle","total","DropdownMenu","tag","right","DropdownItem","handleRowsPerPage","handleFilter","DataListConfig","currentPage","columns","selector","sortable","cell","title","parsedFilter","handleCurrentData","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","thumbView","history","boolean","handlePagination","urlPrefix","href","config","host","pdf","_target","pagination","paginationServer","paginationComponent","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","containerClassName","activeClassName","forcePage","parseInt","onPageChange","noHeader","subHeader","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","sortIcon","dataList","filteredData","connect","customer","Sessions","Row","Col","sm","queryString","parse","location"],"mappings":"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","file":"static/js/11.79be073b.chunk.js","sourcesContent":["import {Axios} from \"../root\"\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const generateUrl = (sessionTime) => {\r\n  return dispatch => {\r\n    Axios.post(\"customers/generate_url\", {\r\n    session_time: sessionTime\r\n  })\r\n  .then(response => {\r\n    console.log(\"GenerateUrl Response: \", response);\r\n    if(response.data.status){\r\n      dispatch({\r\n        type: \"GENERATE_URL\",\r\n        url: response.data.url\r\n      })\r\n\r\n    }\r\n    else{\r\n        toast.error(response.data.msg);\r\n    }\r\n  })\r\n  .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const isOpened = (url) => {\r\n  return dispatch => {\r\n    Axios.post(\"customers/isopened\", {\r\n    url: url\r\n  })\r\n  .then(response => {\r\n    if(response.data.status){\r\n      toast.success('This url is already opened.');\r\n    }\r\n    else{\r\n        toast.error(response.data.msg);\r\n    }\r\n  })\r\n  .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const timeLeft = (url) => {\r\n  return dispatch => {\r\n    Axios.post(\"customers/timeleft\", {\r\n    url: url\r\n  })\r\n  .then(response => {\r\n    if(response.data.status){\r\n\r\n      toast.success(response.data.msg);\r\n    }\r\n    else{\r\n        toast.error(response.data.msg);\r\n    }\r\n  })\r\n  .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getData = params => {\r\n    return async dispatch => {\r\n      await Axios.get(\"customers/customers\", params).then(response => {\r\n        if(!response.data.status){\r\n          toast.error('Internal Server Error!');\r\n        }\r\n        else{\r\n          let rdata = response.data;\r\n          let { page, perPage } = params;\r\n          let totalPages = Math.ceil(rdata.data.length / perPage);\r\n          let fdata = [];\r\n          let newparams = {};\r\n          if (page !== undefined && perPage !== undefined) {\r\n            let calculatedPage = (page - 1) * perPage;\r\n            let calculatedPerPage = page * perPage;\r\n              if(calculatedPage > rdata.data.length){\r\n              totalPages = Math.ceil(rdata.data.length / perPage);\r\n              fdata = rdata.data.slice(0, perPage);\r\n              newparams['page'] = 0;\r\n              newparams['perPage'] = perPage;\r\n            }else{\r\n              fdata = rdata.data.slice(calculatedPage, calculatedPerPage);\r\n              newparams = params;\r\n            }\r\n          }else {\r\n            totalPages = Math.ceil(rdata.data.length / 4);\r\n            fdata = rdata.data.slice(0, 4);\r\n            newparams = params;\r\n          }\r\n          if(fdata.length === 0){\r\n            newparams['page'] = 0;\r\n            newparams['perPage'] = 4;\r\n            fdata = rdata.data.slice(0, 4);\r\n          }\r\n          dispatch({ type: \"GET_CUSTOMER_ALL_DATA\", data: rdata.data, bodyarea: rdata.bodyarea })\r\n          dispatch({\r\n            type: \"GET_CUSTOMER_DATA\",\r\n            data: fdata,\r\n            bodyarea: rdata.bodyarea,\r\n            totalPages: totalPages,\r\n            newparams\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const filterData = value => {\r\n    return dispatch => dispatch({ type: \"FILTER_CUSTOMER_DATA\", value })\r\n  }\r\n  \r\n  export const deleteData = obj => {\r\n    return dispatch => {\r\n      Axios\r\n        .post(\"customers/delete\",obj)\r\n        .then(response => {\r\n          if(!response.data.status){\r\n            toast.error(response.data.msg);\r\n          }\r\n          else{\r\n            dispatch(getData(obj))\r\n          }\r\n        })\r\n    }\r\n  }\r\n  \r\n  export const updateData = obj => {\r\n    console.log(obj);\r\n    return (dispatch, getState) => {\r\n      Axios\r\n        .post(\"customers/update\", obj)\r\n        .then(response => {\r\n          if(!response.data.status){\r\n            toast.error(response.data.msg);\r\n          }\r\n          else{\r\n            dispatch(getData(obj))\r\n          }\r\n        })\r\n    }\r\n  }\r\n  \r\n  export const addData = obj => {\r\n    return (dispatch, getState) => {\r\n      Axios\r\n        .post(\"customers/add\", obj)\r\n        .then(response => {\r\n          if(!response.data.status){\r\n            toast.error(response.data.msg);\r\n          }\r\n          else{\r\n            dispatch(getData(obj))\r\n          }\r\n        })\r\n    }\r\n  }","import {Axios} from \"../root\"\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const getData = (params,customer_id) => {\r\n  console.log(\"CUSTOMERID: \", customer_id)\r\n    return async dispatch => {\r\n      await Axios.post(\"customers/sessions\", {customer_id:customer_id}).then(response => {\r\n        if(!response.data.status){\r\n          toast.error('Internal Server Error!');\r\n        }\r\n        else{\r\n          let rdata = response.data;\r\n          let { page, perPage } = params;\r\n          let totalPages = Math.ceil(rdata.data.length / perPage);\r\n          let fdata = [];\r\n          let newparams = {};\r\n          if (page !== undefined && perPage !== undefined) {\r\n            let calculatedPage = (page - 1) * perPage;\r\n            let calculatedPerPage = page * perPage;\r\n              if(calculatedPage > rdata.data.length){\r\n              totalPages = Math.ceil(rdata.data.length / perPage);\r\n              fdata = rdata.data.slice(0, perPage);\r\n              newparams['page'] = 0;\r\n              newparams['perPage'] = perPage;\r\n            }else{\r\n              fdata = rdata.data.slice(calculatedPage, calculatedPerPage);\r\n              newparams = params;\r\n            }\r\n          }else {\r\n            totalPages = Math.ceil(rdata.data.length / perPage);\r\n            fdata = rdata.data.slice(0, perPage);\r\n            newparams = params;\r\n          }\r\n          if(fdata.length === 0){\r\n            newparams['page'] = 0;\r\n            newparams['perPage'] = perPage;\r\n            fdata = rdata.data.slice(0, perPage);\r\n          }\r\n          dispatch({ type: \"GET_SESSIONS_ALL_DATA\", data: rdata.data })\r\n          dispatch({\r\n            type: \"GET_SESSIONS_DATA\",\r\n            data: fdata,\r\n            totalPages: totalPages,\r\n            newparams\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  export const getCustomers = () => {\r\n    return async dispatch => {\r\n      await Axios.post(\"customers/init_session_data\").then(response => {\r\n        if(!response.data.status){\r\n          toast.error('Internal Server Error!');\r\n        }\r\n        else{\r\n          dispatch({ type: \"GET_CUSTOMERS\", data: response.data })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  export const filterData = value => {\r\n    return dispatch => dispatch({ type: \"FILTER_SESSIONS_DATA\", value })\r\n  }\r\n\r\n  export const deleteData = obj => {\r\n    return dispatch => {\r\n      Axios\r\n        .post(\"customers/session_delete\",obj)\r\n        .then(response => {\r\n          if(!response.data.status){\r\n            toast.error(response.data.msg);\r\n          }\r\n          else{\r\n            dispatch(getData(obj))\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  export const updateData = obj => {\r\n    console.log(obj);\r\n    return (dispatch, getState) => {\r\n      Axios\r\n        .post(\"customers/session_update\", obj)\r\n        .then(response => {\r\n          if(!response.data.status){\r\n            toast.error(response.data.msg);\r\n          }\r\n          else{\r\n            dispatch(getData(obj))\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  export const addData = obj => {\r\n    return (dispatch, getState) => {\r\n      Axios\r\n        .post(\"customers/session_add\", obj)\r\n        .then(response => {\r\n          if(!response.data.status){\r\n            toast.error(response.data.msg);\r\n          }\r\n          else{\r\n            dispatch(getData(obj))\r\n          }\r\n        })\r\n    }\r\n  }\r\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport {IMultiselectProps} from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nfunction useOutsideAlerter(ref, clickEvent) {\n  useEffect(() => {\n      function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n            clickEvent();\n          }\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [ref]);\n}\n\n/**\n* Component that alerts if you click outside of it\n*/\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.outsideClick);\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: IMultiselectProps;\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.onCloseOptionList = this.onCloseOptionList.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t}\n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n\n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  onKeyPress(event) {\n    const { onKeyPressFn } = this.props;\n    if (onKeyPressFn) {\n        onKeyPressFn(event, event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => {\n            const isSelected = this.isSelectedValue(option);\n            return (\n              <li\n                key={`option${i}`}\n                style={style['option']}\n                className={`groupChildEle option ${isSelected ? 'selected' : ''} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n                onClick={() => this.onSelectItem(option)}\n              >\n                {showCheckbox && !singleSelect && (\n                    <input\n                      type=\"checkbox\"\n                      className={'checkbox'}\n                      readOnly\n                      checked={isSelected}\n                    />\n                )}\n                {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n              </li>\n            )}\n          )}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => {\n        const isSelected = this.isSelectedValue(option);\n        return (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`option ${isSelected ? 'selected' : ''} ${highlightOption === i ? `highlightOption highlight` : \"\"} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={isSelected}\n              />\n            )}\n            {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n          </li>\n      )\n    });\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {this.props.selectedValueDecorator(!isObject ? (value || '').toString() : value[displayValue], value)}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onCloseOptionList() {\n    this.setState({\n      toggleOptionsList: false,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0,\n      inputValue: ''\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    this.setState({ inputValue: '' }, this.filterOptionsByInput);\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.onCloseOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, name, hidePlaceholder, disable, showArrow, className, customArrow, hideSelectedList } = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''} ${className || ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`}\n          ref={this.searchWrapper} style={style['searchBox']}\n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {!hideSelectedList && this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className={`searchBox ${singleSelect && selectedValues.length ? 'display-none' : ''}`}\n            id={`${id || 'search'}_input`}\n\t          name={`${name || 'search_name'}_input`}\n            onChange={this.onChange}\n            onKeyPress={this.onKeyPress}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && (\n            <>\n              {customArrow ? <span className=\"icon_down_dir\">{customArrow}</span> : <img src={DownArrow} className={`icon_cancel icon_down_dir`} />}\n            </>\n          )}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <OutsideAlerter outsideClick={this.onCloseOptionList}>\n        {this.renderMultiselectContainer()}\n      </OutsideAlerter>\n    );\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  onKeyPressFn: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  name: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: '',\n  className: '',\n  customArrow: undefined,\n  selectedValueDecorator: v => v,\n  optionValueDecorator: v => v\n} as IMultiselectProps;\n","import React, { Component } from \"react\"\r\nimport { Label, Input, FormGroup, Button } from \"reactstrap\"\r\nimport { X } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport classnames from \"classnames\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"flatpickr/dist/themes/light.css\"\r\nimport \"../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\"\r\nimport Select from \"react-select\"\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n\r\nconst skinTypes = [\r\n  {value:\"1\", label:\"1\"},\r\n  {value:\"2\", label:\"2\"},\r\n  {value:\"3\", label:\"3\"},\r\n  {value:\"4\", label:\"4\"},\r\n  {value:\"5\", label:\"5\"},\r\n  {value:\"6\", label:\"6\"},\r\n]\r\n\r\nconst getToday=()=>{\r\n  let date = new Date();\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth()+1;\r\n  let dt = date.getDate();\r\n\r\n  if (dt < 10) {\r\n    dt = '0' + dt;\r\n  }\r\n  if (month < 10) {\r\n    month = '0' + month;\r\n  }\r\n\r\n  return year + \"-\" + month + \"-\" + dt;\r\n}\r\n\r\nclass DataListSidebar extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    date: getToday(),\r\n    area: \"\",\r\n    skintype: \"\",\r\n    kj: 0,\r\n    cost: 0,\r\n    comments: \"\",\r\n    customer_id: \"\"\r\n  }\r\n\r\n  addNew = false\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.data !== null && prevProps.data === null) {\r\n      if (this.props.data._id !== prevState._id) {\r\n        this.setState({ customer_id: this.props.data._id })\r\n      }\r\n      if (this.props.data.date !== prevState.date) {\r\n        this.setState({ date: this.props.data.date })\r\n      }\r\n      if (this.props.data.area !== prevState.area) {\r\n        this.setState({ area: this.props.data.area })\r\n      }\r\n      if (this.props.data.skintype !== prevState.skintype) {\r\n        this.setState({ skintype: this.props.data.skintype })\r\n      }\r\n      if (this.props.data.kj !== prevState.kj) {\r\n        this.setState({ kj: this.props.data.kj })\r\n      }\r\n      if (this.props.data.cost !== prevState.cost) {\r\n        this.setState({ cost: this.props.data.cost })\r\n      }\r\n      if (this.props.data.comments !== prevState.comments) {\r\n        this.setState({ comments: this.props.data.comments })\r\n      }\r\n    }\r\n\r\n    this.addNew = false\r\n  }\r\n\r\n  onSelect = (selectedList, selectedItem) => {\r\n    var arrOfVals = [];\r\n    selectedList.forEach(element => {\r\n      arrOfVals.push(element.value);\r\n    });\r\n    this.setState({area: arrOfVals})\r\n  }\r\n\r\n  onRemove = (selectedList, removedItem) => {\r\n    var arrOfVals = [];\r\n    selectedList.forEach(element => {\r\n      arrOfVals.push(element.value);\r\n    });\r\n    this.setState({area: arrOfVals})\r\n  }\r\n\r\n  handleSubmit = obj => {\r\n    this.addNew = true\r\n    this.props.addData(obj)\r\n    let params = Object.keys(this.props.dataParams).length\r\n      ? this.props.dataParams\r\n      : { page: 1, perPage: 4 }\r\n    this.props.handleSidebar(false, true)\r\n    this.props.getData(params,this.state.customer_id)\r\n  }\r\n\r\n  render() {\r\n    let { show, handleSidebar, data } = this.props\r\n    let { date, area, kj, cost, comments } = this.state\r\n    return (\r\n      <div\r\n        className={classnames(\"data-list-sidebar\", {\r\n          show: show\r\n        })}>\r\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\r\n          <h4>ADD NEW SESSION</h4>\r\n          <X size={20} onClick={() => handleSidebar(false, true)} />\r\n        </div>\r\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\r\n          <Button color=\"primary\" onClick={() => this.handleSubmit(this.state)}>\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            className=\"ml-1\"\r\n            color=\"danger\"\r\n            outline\r\n            onClick={() => handleSidebar(false, true)}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n        <PerfectScrollbar\r\n          className=\"data-list-fields px-2 mt-3\"\r\n          options={{ wheelPropagation: false }}>\r\n          <FormGroup>\r\n            <Label for=\"data-date\">Date</Label>\r\n            <Flatpickr\r\n              required\r\n              name=\"date\"\r\n              className=\"form-control\"\r\n              value={date}\r\n              onChange={date => {\r\n                this.setState({ date : date });\r\n              }}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-area\">Area</Label>\r\n            <Multiselect\r\n              options={this.props.bodyarea} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n              onSelect={this.onSelect} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              searchBox={{'border': 'none', 'fontSize': '10px', 'minHeight': '50px'}}\r\n              displayValue=\"label\" // Property name to display in the dropdown options\r\n            />\r\n            {/* <Select\r\n              className=\"React mr-3\"\r\n              classNamePrefix=\"select\"\r\n              defaultValue={this.props.bodyarea.length > 0?this.props.bodyarea[0]:''}\r\n              name=\"skintype\"\r\n              options={this.props.bodyarea}\r\n              onChange={e => this.setState({ area: e.label })}\r\n              >\r\n            </Select> */}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-skintype\">Skin Type</Label>\r\n            <Select\r\n              className=\"React mr-3\"\r\n              classNamePrefix=\"select\"\r\n              defaultValue={skinTypes[0]}\r\n              name=\"skintype\"\r\n              options={skinTypes}\r\n              onChange={e => this.setState({ skintype: e.value })}\r\n              >\r\n            </Select>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-kj\">KJ</Label>\r\n            <Input\r\n              type=\"number\"\r\n              id=\"data-kj\"\r\n              value={kj}\r\n              onChange={e => this.setState({ kj: e.target.value })} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-cost\">Cost</Label>\r\n            <Input\r\n              type=\"number\"\r\n              id=\"data-cost\"\r\n              value={cost}\r\n              onChange={e => this.setState({ cost: e.target.value })} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-comments\">Comments</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-comments\"\r\n              value={comments}\r\n              onChange={e => this.setState({ comments: e.target.value })} />\r\n          </FormGroup>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default DataListSidebar\r\n","import React, { Component } from \"react\"\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  Input\r\n} from \"reactstrap\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport classnames from \"classnames\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { history } from \"../../../history\"\r\nimport {\r\n  Edit,\r\n  ChevronDown,\r\n  ChevronLeft,\r\n  ChevronRight\r\n} from \"react-feather\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getData,\r\n  filterData\r\n} from \"../../../redux/actions/customer\"\r\n\r\nimport {\r\n  addData\r\n} from \"../../../redux/actions/sessions\"\r\n\r\nimport Sidebar from \"./DataListSidebar\"\r\n\r\nimport \"../../../assets/scss/plugins/extensions/react-paginate.scss\"\r\nimport \"../../../assets/scss/pages/data-list.scss\"\r\nimport config from \"../../../configs/config\"\r\n\r\nconst selectedStyle = {\r\n  rows: {\r\n    selectedHighlighStyle: {\r\n      backgroundColor: \"rgba(115,103,240,.05)\",\r\n      color: \"#7367F0 !important\",\r\n      boxShadow: \"0 0 1px 0 #7367F0 !important\",\r\n      \"&:hover\": {\r\n        transform: \"translateY(0px) !important\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst ActionsComponent = props => {\r\n  return (\r\n    <div className=\"data-list-action\"\r\n      onClick={() => {\r\n        return props.currentData(props.row)\r\n      }}\r\n      >\r\n      <Edit\r\n        className=\"cursor-pointer mr-1\"\r\n        size={20}\r\n      />\r\n      Add New Session\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CustomHeader = props => {\r\n  return (\r\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\r\n      <div className=\"actions-left d-flex flex-wrap\">\r\n        {/* <UncontrolledDropdown className=\"data-list-dropdown mr-1\">\r\n          <DropdownToggle className=\"p-1\" color=\"primary\">\r\n            <span className=\"align-middle mr-1\">Actions</span>\r\n            <ChevronDown size={15} />\r\n          </DropdownToggle>\r\n          <DropdownMenu tag=\"div\" right>\r\n            <DropdownItem tag=\"a\">Delete</DropdownItem>\r\n            <DropdownItem tag=\"a\">Archive</DropdownItem>\r\n            <DropdownItem tag=\"a\">Print</DropdownItem>\r\n            <DropdownItem tag=\"a\">Export</DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown> */}\r\n        {/* <Button\r\n          className=\"add-new-btn\"\r\n          color=\"primary\"\r\n          onClick={() => props.handleSidebar(true, true)}\r\n          outline>\r\n          <Plus size={15} />\r\n          <span className=\"align-middle\">Add New</span>\r\n        </Button> */}\r\n      </div>\r\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\r\n        <UncontrolledDropdown className=\"data-list-rows-dropdown mr-1 d-md-block d-none\">\r\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\r\n            <span className=\"align-middle mx-50\">\r\n              {`${props.index[0] || 0} - ${props.index[1] || 0} of ${props.total}`}\r\n            </span>\r\n            <ChevronDown size={15} />\r\n          </DropdownToggle>\r\n          <DropdownMenu tag=\"div\" right>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\r\n              4\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\r\n              10\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\r\n              15\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\r\n              20\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n        <div className=\"filter-section\">\r\n          <Input type=\"text\" onChange={e => props.handleFilter(e)} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass DataListConfig extends Component {\r\n\r\n  state = {\r\n    data: [],\r\n    totalPages: 0,\r\n    currentPage: 0,\r\n    bodyarea: [],\r\n    columns: [\r\n      {\r\n        name: \"Name\",\r\n        selector: \"name\",\r\n        sortable: true,\r\n        // minWidth: \"300px\",\r\n        cell: row => (\r\n          <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\r\n            {row.name}\r\n          </p>\r\n        )\r\n      },\r\n      {\r\n        name: \"Phone\",\r\n        selector: \"phone\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"City\",\r\n        selector: \"city\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"First Session\",\r\n        selector: \"fsession\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"Last Session\",\r\n        selector: \"lsession\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"Referred By\",\r\n        selector: \"referredby\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"Actions\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <ActionsComponent\r\n            row={row}\r\n            getData={this.props.getData}\r\n            parsedFilter={this.props.parsedFilter}\r\n            currentData={this.handleCurrentData}\r\n          />\r\n        )\r\n      }\r\n    ],\r\n    allData: [],\r\n    value: \"\",\r\n    rowsPerPage: 4,\r\n    sidebar: false,\r\n    currentData: null,\r\n    selected: [],\r\n    totalRecords: 0,\r\n    sortIndex: [],\r\n    addNew: \"\"\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.dataList.data.length !== state.data.length || state.currentPage !== props.parsedFilter.page) {\r\n      return {\r\n        data: props.dataList.data,\r\n        allData: props.dataList.filteredData,\r\n        totalPages: props.dataList.totalPages,\r\n        currentPage: parseInt(props.parsedFilter.page) - 1,\r\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\r\n        totalRecords: props.dataList.totalRecords,\r\n        sortIndex: props.dataList.sortIndex,\r\n        bodyarea: props.dataList.bodyarea\r\n      }\r\n    }\r\n\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n\r\n  thumbView = this.props.thumbView\r\n\r\n  componentDidMount() {\r\n    this.props.getData(this.props.parsedFilter)\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.thumbView) {\r\n      this.thumbView = false\r\n      let columns = [\r\n        {\r\n          name: \"Name\",\r\n          selector: \"name\",\r\n          sortable: true,\r\n          cell: row => (\r\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\r\n              {row.name}\r\n            </p>\r\n          )\r\n        },\r\n        {\r\n          name: \"Email\",\r\n          selector: \"email\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Phone\",\r\n          selector: \"phone\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"City\",\r\n          selector: \"city\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"First Session\",\r\n          selector: \"fsession\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Last Session\",\r\n          selector: \"lsession\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Referred By\",\r\n          selector: \"referredby\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Consent Form\",\r\n          selector: \"pdf\",\r\n          sortable: true,\r\n          cell: row => (\r\n                <a\r\n                  className=\"m-0\"\r\n                  href={config.host+'consentforms/'+row.pdf}\r\n                  _target=\"blank\"\r\n                >View</a>\r\n          )\r\n        },\r\n        {\r\n          name: \"Actions\",\r\n          sortable: true,\r\n          cell: row => (\r\n            <ActionsComponent\r\n              row={row}\r\n              getData={this.props.getData}\r\n              parsedFilter={this.props.parsedFilter}\r\n              currentData={this.handleCurrentData}\r\n            />\r\n          )\r\n        }\r\n      ]\r\n      this.setState({ columns })\r\n    }\r\n  }\r\n\r\n  handleFilter = e => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.filterData(e.target.value)\r\n  }\r\n\r\n  handleRowsPerPage = value => {\r\n    let { parsedFilter, getData } = this.props\r\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\r\n    history.push(`?page=${page}&perPage=${value}`)\r\n    this.setState({ rowsPerPage: value })\r\n    getData({ page: parsedFilter.page, perPage: value })\r\n  }\r\n\r\n  handleSidebar = (boolean, addNew = false) => {\r\n    this.setState({ sidebar: boolean })\r\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\r\n  }\r\n\r\n  handleCurrentData = obj => {\r\n    this.setState({ currentData: obj })\r\n    this.handleSidebar(true)\r\n  }\r\n\r\n  handlePagination = page => {\r\n    let { parsedFilter, getData } = this.props\r\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\r\n    let urlPrefix = this.props.thumbView\r\n      ? \"\"\r\n      : \"\"\r\n    history.push(\r\n      `${urlPrefix}?page=${page.selected + 1}&perPage=${perPage}`\r\n    )\r\n    getData({ page: page.selected + 1, perPage: perPage })\r\n    this.setState({ currentPage: page.selected })\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      columns,\r\n      data,\r\n      allData,\r\n      totalPages,\r\n      value,\r\n      rowsPerPage,\r\n      currentData,\r\n      sidebar,\r\n      totalRecords,\r\n      sortIndex\r\n    } = this.state\r\n    return (\r\n      <div\r\n        className={`data-list ${\r\n          this.props.thumbView ? \"thumb-view\" : \"list-view\"\r\n        }`}>\r\n        <DataTable\r\n          columns={columns}\r\n          data={value.length ? allData : data}\r\n          pagination\r\n          paginationServer\r\n          paginationComponent={() => (\r\n            <ReactPaginate\r\n              previousLabel={<ChevronLeft size={15} />}\r\n              nextLabel={<ChevronRight size={15} />}\r\n              breakLabel=\"...\"\r\n              breakClassName=\"break-me\"\r\n              pageCount={totalPages}\r\n              containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\r\n              activeClassName=\"active\"\r\n              forcePage={\r\n                this.props.parsedFilter.page\r\n                  ? parseInt(this.props.parsedFilter.page - 1)\r\n                  : 0\r\n              }\r\n              onPageChange={page => this.handlePagination(page)}\r\n            />\r\n          )}\r\n          noHeader\r\n          subHeader\r\n          responsive\r\n          pointerOnHover\r\n          selectableRowsHighlight\r\n          onSelectedRowsChange={data =>\r\n            this.setState({ selected: data.selectedRows })\r\n          }\r\n          customStyles={selectedStyle}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              handleSidebar={this.handleSidebar}\r\n              handleFilter={this.handleFilter}\r\n              handleRowsPerPage={this.handleRowsPerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              total={totalRecords}\r\n              index={sortIndex}\r\n            />\r\n          }\r\n          sortIcon={<ChevronDown />}\r\n        />\r\n        <Sidebar\r\n          show={sidebar}\r\n          data={currentData}\r\n          addData={this.props.addData}\r\n          handleSidebar={this.handleSidebar}\r\n          thumbView={this.props.thumbView}\r\n          bodyarea={this.state.bodyarea||[]}\r\n          getData={this.props.getData}\r\n          dataParams={this.props.parsedFilter}\r\n          addNew={this.state.addNew}\r\n        />\r\n        <div\r\n          className={classnames(\"data-list-overlay\", {\r\n            show: sidebar\r\n          })}\r\n          onClick={() => this.handleSidebar(false, true)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    dataList: state.customer\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getData,\r\n  addData,\r\n  filterData\r\n})(DataListConfig)\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport ListViewConfig from \"./DataListConfig\"\r\nimport queryString from \"query-string\"\r\n\r\nclass Sessions extends React.Component{\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <ListViewConfig parsedFilter={queryString.parse(this.props.location.search)}/>\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sessions"],"sourceRoot":""}